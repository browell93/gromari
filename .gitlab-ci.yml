# uses a shell runner to build and launch docker images
# the docker images are created by the docker-compose-dev.yml file in the project

stages:
  - test
  - deploy
  - cleanup

test:
  # builds a local copy of the app on the gitlab server to run tests before
  # deploying to production environment
  stage: test
  script:
    - docker-compose -f docker-compose.yml build --no-cache
    - docker-compose -f docker-compose.yml up -d --force-recreate
    - docker exec gromari-web python3 manage.py test --noinput
    - docker-compose -f docker-compose.yml down
  tags:
    - shell # tag used for selection of build runner

deploy:
  stage: deploy
  retry: 2
  script:
    # add the gitlab build number to the version file
    - echo $CI_BUILD_ID >> version
    # ssh to docker server to setup deployment
    - ssh root@10.0.1.210 "mkdir -p /tmp/gromari"
    - scp -r ./* root@10.0.1.210:/tmp/gromari
    - ssh root@10.0.1.210 "cd /tmp/gromari && docker-compose -f docker-compose.yml down"
    - ssh root@10.0.1.210 "cd /tmp/gromari && docker-compose -f docker-compose.yml build --no-cache"
    - ssh root@10.0.1.210 "cd /tmp/gromari && docker-compose -f docker-compose.yml up -d --force-recreate"
  tags:
    - shell # tag used for selection of build runner

cleaup:
  stage: cleanup
  retry: 2
  script:
    # remove the build dir from the server
    - ssh root@10.0.1.210 "rm -rf /tmp/gromari"
  tags:
    - shell # tag used for selection of build runner
